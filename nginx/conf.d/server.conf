# upstream system_a {
#   server  server-a-0:80;
#   server  server-a-1:80;
#   server  server-a-2:80;
# }

# upstream system_b {
#   server  server-b-0:80;
#   server  server-b-1:80;
#   server  server-b-2:80;
# }

server {
    listen       80;
    listen  [::]:80;

    # This handles ALL server names
    server_name _;

    # ----- HEADERS TO INCLUDE WHEN REVERSE-PROXYING ----- #
    proxy_set_header Ink-Request-Id 	$request_id;
    proxy_set_header Ink-Requester-IP $remote_addr;
    proxy_set_header Ink-Request-Host $host;
    proxy_set_header Ink-Request-Uri 	$request_uri;

    # ----- BLUE/GREEN WITH "MAP" ----- #

    # system_a is currently Green
    if (! -f /etc/nginx/blue-green/b-is-green.txt) {
      set $greenUpstream 'system_a';
      set $blueUpstream 'system_b';    
    }

    # system_b is currently Green    
    if (-f /etc/nginx/blue-green/b-is-green.txt) {
      set $greenUpstream 'system_b';
      set $blueUpstream 'system_a';    
    }

    # Is it a host that is always Blue?
    map $host $host_always_blue {
      org4.blue-green.lan 1;
      default 0;
    }

    # Is it an east/west call?
    map $remote_addr $east_west_origin {
      ~^172\.18\.1\. 1; # east/west from system_a
      ~^172\.18\.2\. 2; # east/west from system_b
      default 0;        # not an east/west call
    }

    # Determine the target upstream
    map $east_west_origin:$host_always_blue $targetUpstream {
      
      # Blue or Green can change dynamically
      # 'volatile' ensures NGINX doesn't cache this mapping
      volatile;

      # East/West Origin that is non-0 always goes back to the same system
      # Host Always Blue is not considered for East/West calls
      1:0 system_a;
      1:1 system_a;
      2:0 system_b;
      2:1 system_b;

      # East/West Origin that is 0 is not an East/West call
      # Now, we map to Green unless Host Always Blue is 1
      0:0 $greenUpstream;
      0:1 $blueUpstream;
    }

    # ----- BLUE/GREEN WITH "IF" ----- #

    # # Assume "System A" is green
    # set $greenUpstream  'system_a';
    # set $blueUpstream   'system_b';
    # set $targetUpstream $greenUpstream;

    # # Check if "System B" should be green instead
    # # If so, swap blue and green
    # if (-e /etc/nginx/blue-green/b-is-green.txt) {
    #   set $greenUpstream 'system_b';
    #   set $blueUpstream 'system_a';    
    #   set $targetUpstream $greenUpstream;  
    # }

    # # Check if host is 'org4.blue-green.lan'
    # # This host should always use blue instead
    # # If that's the case, set the target upstream to the blue upstream
    # if ($host = 'org4.blue-green.lan') {
    #   set $targetUpstream $blueUpstream;
    # }

    # # Check if it's an East/West call from "System A"
    # # If so, stay in "System A"
    # if ($remote_addr ~ "^172\.18\.1\.") { 
    #   set $targetUpstream 'system_a';
    # }

    # # Check if it's an East/West call from "System B"
    # # If so, stay in "System B"
    # if ($remote_addr ~ "^172\.18\.2\.") { 
    #   set $targetUpstream 'system_b';
    # }

    # ----- LOCATIONS ----- #
    
    location / {
      proxy_pass  http://$targetUpstream;
    }

}
